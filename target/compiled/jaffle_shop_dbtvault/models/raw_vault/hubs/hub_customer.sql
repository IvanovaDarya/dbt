-- Generated by dbtvault.

WITH row_rank_1 AS (

SELECT * FROM (
    SELECT CUSTOMER_PK, CUSTOMER_KEY, LOAD_DATE, RECORD_SOURCE,
           ROW_NUMBER() OVER(
               PARTITION BY CUSTOMER_PK
               ORDER BY LOAD_DATE ASC
           ) AS row_number
    FROM "postgres"."dbt"."v_stg_customers"

) as h
WHERE row_number = 1
),

row_rank_2 AS (

SELECT * FROM (
    SELECT CUSTOMER_PK, CUSTOMER_KEY, LOAD_DATE, RECORD_SOURCE,
           ROW_NUMBER() OVER(
               PARTITION BY CUSTOMER_PK
               ORDER BY LOAD_DATE ASC
           ) AS row_number
    FROM "postgres"."dbt"."v_stg_orders"

) as h
WHERE row_number = 1
),

row_rank_3 AS (

SELECT * FROM (
    SELECT CUSTOMER_PK, CUSTOMER_KEY, LOAD_DATE, RECORD_SOURCE,
           ROW_NUMBER() OVER(
               PARTITION BY CUSTOMER_PK
               ORDER BY LOAD_DATE ASC
           ) AS row_number
    FROM "postgres"."dbt"."v_stg_customers_crm"

) as h
WHERE row_number = 1
),

stage_union AS (
    SELECT * FROM row_rank_1
    UNION ALL
    SELECT * FROM row_rank_2
    UNION ALL
    SELECT * FROM row_rank_3
),

row_rank_union AS (

SELECT * FROM (

    SELECT *,
           ROW_NUMBER() OVER(
               PARTITION BY CUSTOMER_PK
               ORDER BY LOAD_DATE, RECORD_SOURCE ASC
           ) AS row_rank_number
    FROM stage_union
    WHERE CUSTOMER_PK IS NOT NULL
) as h 
WHERE row_rank_number = 1
),

records_to_insert AS (
    SELECT a.CUSTOMER_PK, a.CUSTOMER_KEY, a.LOAD_DATE, a.RECORD_SOURCE
    FROM row_rank_union AS a
    LEFT JOIN "postgres"."dbt"."hub_customer" AS d
    ON a.CUSTOMER_PK = d.CUSTOMER_PK
    WHERE d.CUSTOMER_PK IS NULL
)

SELECT * FROM records_to_insert